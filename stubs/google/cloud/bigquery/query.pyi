# Stubs for google.cloud.bigquery.query (Python 3.6)
#
# NOTE: This dynamically typed stub was automatically generated by stubgen.

from typing import Any

class UDFResource:
    udf_type: Any = ...
    value: Any = ...
    def __init__(self, udf_type, value) -> None: ...
    def __eq__(self, other): ...
    def __ne__(self, other): ...

class _AbstractQueryParameter:
    @classmethod
    def from_api_repr(cls, resource): ...
    def to_api_repr(self): ...

class ScalarQueryParameter(_AbstractQueryParameter):
    name: Any = ...
    type_: Any = ...
    value: Any = ...
    def __init__(self, name, type_, value) -> None: ...
    @classmethod
    def positional(cls, type_, value): ...
    @classmethod
    def from_api_repr(cls, resource): ...
    def to_api_repr(self): ...
    def __eq__(self, other): ...
    def __ne__(self, other): ...

class ArrayQueryParameter(_AbstractQueryParameter):
    name: Any = ...
    array_type: Any = ...
    values: Any = ...
    def __init__(self, name, array_type, values) -> None: ...
    @classmethod
    def positional(cls, array_type, values): ...
    @classmethod
    def from_api_repr(cls, resource): ...
    def to_api_repr(self): ...
    def __eq__(self, other): ...
    def __ne__(self, other): ...

class StructQueryParameter(_AbstractQueryParameter):
    name: Any = ...
    def __init__(self, name, *sub_params) -> None: ...
    @classmethod
    def positional(cls, *sub_params): ...
    @classmethod
    def from_api_repr(cls, resource): ...
    def to_api_repr(self): ...
    def __eq__(self, other): ...
    def __ne__(self, other): ...

class QueryResults:
    def __init__(self, properties) -> None: ...
    @classmethod
    def from_api_repr(cls, api_response): ...
    @property
    def project(self): ...
    @property
    def cache_hit(self): ...
    @property
    def complete(self): ...
    @property
    def errors(self): ...
    @property
    def job_id(self): ...
    @property
    def page_token(self): ...
    @property
    def total_rows(self): ...
    @property
    def total_bytes_processed(self): ...
    @property
    def num_dml_affected_rows(self): ...
    @property
    def rows(self): ...
    @property
    def schema(self): ...
